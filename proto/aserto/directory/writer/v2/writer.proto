syntax = "proto3";

package aserto.directory.writer.v2;

option go_package = "github.com/aserto-dev/go-directory/aserto/directory/writer/v2;writer"; 

import "google/protobuf/empty.proto";

import "aserto/directory/common/v2/common.proto";

service Writer {
    // object type metadata methods
    rpc SetObjectType(SetObjectTypeRequest) returns (SetObjectTypeResponse) {};
    rpc DeleteObjectType(DeleteObjectTypeRequest) returns (DeleteObjectTypeResponse) {};
    
    // relation type metadata methods
    rpc SetRelationType(SetRelationTypeRequest) returns (SetRelationTypeResponse) {};
    rpc DeleteRelationType(DeleteRelationTypeRequest) returns (DeleteRelationTypeResponse) {};
    
    // permission metadata methods
    rpc SetPermission(SetPermissionRequest) returns (SetPermissionResponse) {};
    rpc DeletePermission(DeletePermissionRequest) returns (DeletePermissionResponse) {};
    
    // object methods
    rpc SetObject(SetObjectRequest) returns (SetObjectResponse) {};
    rpc DeleteObject(DeleteObjectRequest) returns (DeleteObjectResponse) {};
    
    // relation methods
    rpc SetRelation(SetRelationRequest) returns (SetRelationResponse) {};
    rpc DeleteRelation(DeleteRelationRequest) returns (DeleteRelationResponse) {};
}

message SetObjectTypeRequest {
    aserto.directory.common.v2.ObjectType object_type           = 1;    // 
}

message SetObjectTypeResponse {
    repeated aserto.directory.common.v2.ObjectType results      = 1;    // array of object types
}

message DeleteObjectTypeRequest {
    aserto.directory.common.v2.ObjectTypeIdentifier param       = 1;    // 
}

message DeleteObjectTypeResponse {
    google.protobuf.Empty result                                = 1;    // empty result
}

message SetRelationTypeRequest {
    aserto.directory.common.v2.RelationType relation_type       = 1;    // 
}

message SetRelationTypeResponse {
    repeated aserto.directory.common.v2.RelationType results    = 1;    // array of relation types
}

message DeleteRelationTypeRequest {
    aserto.directory.common.v2.RelationTypeIdentifier param     = 1;    // 
}   
    
message DeleteRelationTypeResponse {    
    google.protobuf.Empty result                                = 1;    // empty result
}   
    
message SetPermissionRequest {
    aserto.directory.common.v2.Permission permission            = 1;    // 
}   
    
message SetPermissionResponse { 
    repeated aserto.directory.common.v2.Permission results     = 1;    // array of permision instances
}   
    
message DeletePermissionRequest {
    aserto.directory.common.v2.PermissionIdentifier param       = 1;   // 
}   
    
message DeletePermissionResponse {  
    google.protobuf.Empty result                                = 1;    // empty result
}   
    
message SetObjectRequest {
    aserto.directory.common.v2.Object object                    = 1;    // 
}   
    
message SetObjectResponse { 
    repeated aserto.directory.common.v2.Object results          = 1;    // array of object instances
}   
    
message DeleteObjectRequest {
    aserto.directory.common.v2.ObjectIdentifier param           = 1;    // 
}   
    
message DeleteObjectResponse {  
    google.protobuf.Empty result                                = 1;    // empty result
}   
    
message SetRelationRequest {    
    aserto.directory.common.v2.Relation relation                = 1;    // 
}   
    
message SetRelationResponse {   
    repeated aserto.directory.common.v2.Relation results        = 1;    // array of relation instances
}   
    
message DeleteRelationRequest {
    aserto.directory.common.v2.RelationIdentifier param         = 1;    // 
}   
    
message DeleteRelationResponse {    
    google.protobuf.Empty result                                = 1;    // empty result
}   
