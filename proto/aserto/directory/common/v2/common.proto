syntax = "proto3";

package aserto.directory.common.v2;

option go_package = "github.com/aserto-dev/go-directory/aserto/directory/common/v2;common";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

message ObjectType {
    reserved 1, 22;
    reserved "id", "deleted_at";

    // object type name (unique, lc-string)
    string name                                         = 2;
    // object type display name
    string display_name                                 = 3;
    // object type is a subject (user|group) (default false)
    bool is_subject                                     = 4;
    // sort ordinal (default 0)
    int32 ordinal                                       = 5;
    // status flag bitmap (default 0)
    uint32 status                                       = 6;
    // object type schema definition (JSON)
    google.protobuf.Struct schema                       = 10;
    // created at timestamp (UTC)
    google.protobuf.Timestamp created_at                = 20;
    // last updated timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;
    // object instance hash
    string hash                                         = 23;
}

message Permission {
    reserved 1, 22;
    reserved "id", "deleted_at";

    // permission name (unique, cs-string)
    string name                                         = 2;
    // permission display name
    string display_name                                 = 3;
    // created at timestamp (UTC)
    google.protobuf.Timestamp created_at                = 20;
    // last updated timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;
    // object instance hash
    string hash                                         = 23;
}

message RelationType {
    reserved 1, 22;
    reserved "id", "deleted_at";

    // relation type name selector
    string name                                         = 2;
    // object type referenced by relation
    string object_type                                  = 3;
    // relation display name
    string display_name                                 = 4;
    // sort ordinal (default 0)
    int32 ordinal                                       = 5;
    // status bitmap (default 0)
    uint32 status                                       = 6;
    // relations union-ed with relation type instance
    repeated string unions                              = 7;
    // permissions associated to relation type instance
    repeated string permissions                         = 8;
    // created at timestamp (UTC)
    google.protobuf.Timestamp created_at                = 20;
    // last updated timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;
    // object instance hash
    string hash                                         = 23;
}

message Object {
    reserved 1, 22;
    reserved "id", "deleted_at";

    // external object key (cs-string)
    string key                                          = 2;
    // object type name
    string type                                         = 3;
    // display name object
    string display_name                                 = 4;
    // property bag
    google.protobuf.Struct properties                   = 5;
    // created at timestamp (UTC)
    google.protobuf.Timestamp created_at                = 20;
    // last updated timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;
    // object instance hash
    string hash                                         = 23;
}

message Relation {
    reserved 22;
    reserved "deleted_at";

    // subject identifier
    ObjectIdentifier subject                            = 1;
    // relation type name
    string relation                                     = 2;
    // object identifier
    ObjectIdentifier object                             = 3;
    // created at timestamp (UTC)
    google.protobuf.Timestamp created_at                = 20;
    // last updated timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;
    // object instance hash
    string hash                                         = 23;
}

message ObjectDependency {
    reserved 3, 9;
    reserved "object_id", "subject_id";

    // object type name of source object
    string  object_type                                 = 1;
    // object search key of source object
    string  object_key                                  = 4;
    // relation identifier
    string  relation                                    = 5;
    // object type id of target object
    string  subject_type                                = 7;
    // object search key of target object
    string  subject_key                                 = 10;
    // dependency depth
    int32   depth                                       = 11;
    // dependency cycle
    bool    is_cycle                                    = 12;
    // dependency path
    repeated string path                                = 13;
}

enum Flag {
    // default, no special object behavior
    FLAG_UNKNOWN                                        = 0x0;
    // hidden object
    FLAG_HIDDEN                                         = 0x1;
    // read-only object
    FLAG_READONLY                                       = 0x2;
    // system object
    FLAG_SYSTEM                                         = 0x4;
    // shadow object by type+key associated to parent object
    FLAG_SHADOW                                         = 0x8;
}

// ObjectType identifier
message ObjectTypeIdentifier {
    reserved 1;
    reserved "id";

    // object type name (unique, lc-string)
    optional string name                                = 2;
}

// Permission identifier
message PermissionIdentifier {
    reserved 1;
    reserved "id";

    // permission name (unique, cs-string)
    optional string name                                = 2;
}

// RelationType identifier
message RelationTypeIdentifier {
    reserved 1;
    reserved "id";

    // relation type name selector
    optional string name                                = 2;
    // object type referenced by relation
    optional string object_type                         = 3;
}

// Object identifier
message ObjectIdentifier {
    reserved 2;
    reserved "id";

    // object type
    optional string type                                = 1;
    // external object key (cs-string)
    optional string key                                 = 3;
}

// Relation identifier
message RelationIdentifier {
    // subject identifier
    ObjectIdentifier subject                            = 1;
    // relation identifier
    RelationTypeIdentifier relation                     = 2;
    // object identifier
    ObjectIdentifier object                             = 3;
}

// Pagination request
message PaginationRequest {
    // requested page size, valid value between 1-100 rows (default 100)
    int32 size                                          = 1;
    // pagination start token, default ""
    string token                                        = 2;
}

// Pagination response
message PaginationResponse {
    // next page token, when empty there are no more pages to fetch
    string next_token                                   = 1;
    // result size of the page returned
    int32 result_size                                   = 2;
}
