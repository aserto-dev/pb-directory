syntax = "proto3";

package aserto.directory.common.v2;

option go_package = "github.com/aserto-dev/go-directory/aserto/directory/common/v2;common"; 

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

message ObjectType {
    int32 id                                            = 1;    // internal object type id
    string name                                         = 2;    // object type name (unique, lc-string)
    string display_name                                 = 3;    // object type display name
    bool is_subject                                     = 4;    // object type is a subject (user|group) (default false)
    int32 ordinal                                       = 5;    // sort ordinal (default 0)
    uint32 status                                       = 6;    // status flag bitmap (default 0)
    google.protobuf.Struct schema                       = 10;   // object type schema definition (JSON)
    google.protobuf.Timestamp created_at                = 20;   // created at timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;   // last updated timestamp (UTC)
    google.protobuf.Timestamp deleted_at                = 22;   // deleted timestamp (UTC)
    string hash                                         = 23;   // object instance hash
}

message Permission {
    string id                                           = 1;    // internal permission id
    string name                                         = 2;    // permission name (unique, cs-string)
    string display_name                                 = 3;    // permission display name
    google.protobuf.Timestamp created_at                = 20;   // created at timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;   // last updated timestamp (UTC)
    google.protobuf.Timestamp deleted_at                = 22;   // deleted timestamp (UTC)
    string hash                                         = 23;   // object instance hash
}

message RelationType {
    int32 id                                            = 1;    // relation type id selector
    string name                                         = 2;    // relation type name selector
    string object_type                                  = 3;    // object type referenced by relation
    string display_name                                 = 4;    // relation display name
    int32 ordinal                                       = 5;    // sort ordinal (default 0)
    uint32 status                                       = 6;    // status bitmap (default 0)
    repeated string unions                              = 7;    // relations union-ed with relation type instance
    repeated string permissions                         = 8;    // permissions associated to relation type instance
    google.protobuf.Timestamp created_at                = 20;   // created at timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;   // last updated timestamp (UTC)
    google.protobuf.Timestamp deleted_at                = 22;   // deleted timestamp (UTC)
    string hash                                         = 23;   // object instance hash
}

message Object {
    string id                                           = 1;    // internal object id (uuid)
    string key                                          = 2;    // external object key (cs-string)
    string type                                         = 3;    // object type name
    string display_name                                 = 4;    // display name object
    google.protobuf.Struct properties                   = 5;    // property bag
    google.protobuf.Timestamp created_at                = 20;   // created at timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;   // last updated timestamp (UTC)
    google.protobuf.Timestamp deleted_at                = 22;   // deleted timestamp (UTC)
    string hash                                         = 23;   // object instance hash
}

message Relation {
    ObjectIdentifier subject                            = 1;    // subject identifier
    string relation                                     = 2;    // relation type ID
    ObjectIdentifier object                             = 3;    // object identifier
    google.protobuf.Timestamp created_at                = 20;   // created at timestamp (UTC)
    google.protobuf.Timestamp updated_at                = 21;   // last updated timestamp (UTC)
    google.protobuf.Timestamp deleted_at                = 22;   // deleted timestamp (UTC)
    string hash                                         = 23;   // object instance hash
}

message ObjectDependency {
	string  object_type                                 = 1;    // object type name of source object
	string  object_id                                   = 3;    // object id (uuid) of source object
	string  object_key                                  = 4;    // object search key of source object
    string  relation                                    = 5;    // relation identifier
    string  subject_type                                = 7;    // object type id of target object 
    string  subject_id                                  = 9;    // object id (uuid) of target object
    string  subject_key                                 = 10;   // object search key of target object
    int32   depth                                       = 11;   // dependency depth
    bool    is_cycle                                    = 12;   // dependency cycle
    string  path                                        = 13;   // dependency path
}

enum Flag {
    FLAG_UNKNOWN                                        = 0x0;  // default, no special object behavior
    FLAG_HIDDEN                                         = 0x1;  // hidden object
    FLAG_READONLY                                       = 0x2;  // read-only object
    FLAG_SYSTEM                                         = 0x4;  // system object
    FLAG_SHADOW                                         = 0x8;  // shadow object by type+key associated to parent object
}

// ObjectType identifier
message ObjectTypeIdentifier {
    optional int32 id                                   = 1;    // internal object type id
    optional string name                                = 2;    // object type name (unique, lc-string)
}

// Permission identifier
message PermissionIdentifier {
    optional string id                                  = 1;    // internal permission id
    optional string name                                = 2;    // permission name (unique, cs-string)
}

// RelationType identifier
message RelationTypeIdentifier {
    optional int32 id                                   = 1;    // relation type id selector
    optional string name                                = 2;    // relation type name selector
    optional string object_type                         = 3;    // object type referenced by relation
}

// Object identifier 
message ObjectIdentifier {
    optional string type                                = 1;    // object type
    optional string id                                  = 2;    // internal object id (uuid)
    optional string key                                 = 3;    // external object key (cs-string)
}

// Relation identifier
message RelationIdentifier {
    ObjectIdentifier subject                            = 1;    // subject identifier
    RelationTypeIdentifier relation                     = 2;    // relation identifier
    ObjectIdentifier object                             = 3;    // object identifier
}
