syntax = "proto3";

package aserto.directory.v2;

option go_package = "github.com/aserto-dev/go-directory/aserto/directory/v2;directory"; 

import "aserto/api/v2/pagination.proto";
import "aserto/directory/common/v2/common.proto";

service Directory {
    // object type metadata methods
    rpc GetObjectType(GetObjectTypeRequest) returns (GetObjectTypeResponse) {};
    rpc GetObjectTypes(GetObjectTypesRequest) returns (GetObjectTypesResponse) {};
    
    // relation type metadata methods
    rpc GetRelationType(GetRelationTypeRequest) returns (GetRelationTypeResponse) {};
    rpc GetRelationTypes(GetRelationTypesRequest) returns (GetRelationTypesResponse) {};
    
    // permission metadata methods
    rpc GetPermission(GetPermissionRequest) returns (GetPermissionResponse) {};
    rpc GetPermissions(GetPermissionsRequest) returns (GetPermissionsResponse) {};
    
    // object methods
    rpc GetObject(GetObjectRequest) returns (GetObjectResponse) {};
    rpc GetObjects(GetObjectsRequest) returns (GetObjectsResponse) {};
    
    // relation methods
    rpc GetRelation(GetRelationRequest) returns (GetRelationResponse) {};
    rpc GetRelations(GetRelationsRequest) returns (GetRelationsResponse) {};
    
    // check methods
    rpc CheckPermission(CheckPermissionRequest) returns (CheckPermissionResponse) {};
    rpc CheckRelation(CheckRelationRequest) returns (CheckRelationResponse) {};

    // graph methods
    rpc GetGraph(GetGraphRequest) returns (GetGraphResponse) {};
}

message GetObjectTypeRequest {
    aserto.directory.common.v2.ObjectTypeIdentifier param       = 1;    // object type selector
}

message GetObjectTypeResponse {
    aserto.directory.common.v2.ObjectType result                = 1;    // object type instance
}

message GetObjectTypesRequest {
    aserto.api.v2.PaginationRequest page                        = 9;    // pagination request
}

message GetObjectTypesResponse {
    repeated aserto.directory.common.v2.ObjectType results      = 1;    // array of object types
    aserto.api.v2.PaginationResponse page                       = 9;    // pagination response
}

message GetRelationTypeRequest {
    aserto.directory.common.v2.RelationTypeIdentifier param     = 1;    // relation type selector
}

message GetRelationTypeResponse {
    aserto.directory.common.v2.RelationType result              = 1;    // relation type instance
}

message GetRelationTypesRequest {
    aserto.directory.common.v2.ObjectTypeIdentifier param       = 1;    // object type selector    
    aserto.api.v2.PaginationRequest page                        = 9;    // pagination request
}

message GetRelationTypesResponse {
    repeated aserto.directory.common.v2.RelationType results    = 1;    // array of relation types
    aserto.api.v2.PaginationResponse page                       = 9;    // pagination response
}

message GetObjectRequest {
    aserto.directory.common.v2.ObjectIdentifier param           = 1;    // object selector
}

message GetObjectResponse {
    aserto.directory.common.v2.Object result                    = 1;    // object instance
}

message GetObjectsRequest {
    aserto.directory.common.v2.ObjectTypeIdentifier param       = 1;    // object type selector
    aserto.api.v2.PaginationRequest page                        = 9;    // pagination request
}

message GetObjectsResponse {
    repeated aserto.directory.common.v2.Object results          = 1;    // array of object instances
    aserto.api.v2.PaginationResponse page                       = 9;    // pagination response
}

message GetRelationRequest {
    aserto.directory.common.v2.RelationIdentifier param         = 1;    // relation selector
}

message GetRelationResponse {
    aserto.directory.common.v2.Relation result                  = 1;    // relation instance
}

message GetRelationsRequest {
    aserto.directory.common.v2.RelationIdentifier param         = 1;    // relation selector
    aserto.api.v2.PaginationRequest page                        = 9;    // pagination request
}

message GetRelationsResponse {
    repeated aserto.directory.common.v2.Relation results        = 1;    // results array of relations
    aserto.api.v2.PaginationResponse page                       = 9;    // pagination response
}

message GetPermissionRequest {
    aserto.directory.common.v2.PermissionIdentifier param       = 1;    // permission selector
}

message GetPermissionResponse {
    aserto.directory.common.v2.Permission result                = 1;    // permission instance
}

message GetPermissionsRequest {
    aserto.api.v2.PaginationRequest page                        = 9;    // pagination request
}

message GetPermissionsResponse {
    repeated aserto.directory.common.v2.Permission results      = 1;    // array of permissions
    aserto.api.v2.PaginationResponse page                       = 9;    // pagination response
}

message CheckPermissionRequest {
    aserto.directory.common.v2.ObjectIdentifier subject         = 1;    // subject selector
    aserto.directory.common.v2.PermissionIdentifier permission  = 2;    // permission selector
    aserto.directory.common.v2.ObjectIdentifier object          = 3;    // object selector
    bool trace                                                  = 7;    // collect trace information
}   

message CheckPermissionResponse { 
    bool check                                                  = 1;    // check result (BOOL)
    repeated string trace                                       = 2;    // trace information
}

message CheckRelationRequest {
    aserto.directory.common.v2.ObjectIdentifier subject         = 1;    // subject selector
    aserto.directory.common.v2.RelationTypeIdentifier relation  = 2;    // relation selector
    aserto.directory.common.v2.ObjectIdentifier object          = 3;    // object selector
    bool trace                                                  = 7;    // collect trace information
}   

message CheckRelationResponse { 
    bool check                                                  = 1;    // check result (BOOL)
    repeated string trace                                       = 2;    // trace information
}

message CheckResponse { 
    bool check                                                  = 1;    // check result (BOOL)
    repeated string trace                                       = 2;    // trace information
}

message GetGraphRequest {
    aserto.directory.common.v2.ObjectIdentifier anchor          = 1;    // anchor selector
    aserto.directory.common.v2.ObjectIdentifier subject         = 2;    // subject selector
    aserto.directory.common.v2.RelationTypeIdentifier relation  = 3;    // relation selector
    aserto.directory.common.v2.ObjectIdentifier object          = 4;    // object selector
}

message GetGraphResponse {
    repeated aserto.directory.common.v2.ObjectDependency results= 1;    // dependency graph
}
