syntax = "proto3";

package aserto.directory.model.v3;

option go_package = "github.com/aserto-dev/go-directory/aserto/directory/model/v3;model"; 

import "google/protobuf/empty.proto";

service Model {
    rpc GetModel(GetModelRequest) returns (stream GetModelResponse) {};
    rpc SetModel(stream SetModelRequest) returns (SetModelResponse) {};
}

message Metadata {
    string  name                      = 1;    // Model name (unique, lc-string)
    string  version                   = 2;    // Model version (semver)
}

enum OnDelete {
    ON_DELETE_UNKNOWN                  = 0x0;  // default, will be treated as fail
    ON_DELETE_FAIL                     = 0x1;  // fail if a type requires to be deleted
    ON_DELETE_DELETE                   = 0x2;  // delete if a types is required based on a new model
    ON_DELETE_NUKE                     = 0x3;  // delete all types before creating the new ones
}

message MetadataReq {
    Metadata metadata                 = 1;
    OnDelete op_code                  = 2;    // operation code indicating how to handle types deletion
}

message GetModelRequest {
    google.protobuf.Empty result      = 1;    // empty result
}

message GetModelResponse {
    oneof msg {
        Metadata metadata             = 1;     // Model metadata  
        bytes   body                  = 2;     // Model content
    }
}

message SetModelRequest {
    oneof msg {
        MetadataReq metadata          = 1;     // Model metadata 
        bytes   body                  = 2;     // Model content
    }
}

message SetModelResponse {
    google.protobuf.Empty result      = 1;    // empty result
}

message DeleteModelRequest {
    Metadata metadata                 = 1; 
}

message DeleteModelResponse {
    google.protobuf.Empty result      = 1;    // empty result
}
